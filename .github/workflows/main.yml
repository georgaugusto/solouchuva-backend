name: CI

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v1.4.2
        with:
          node-version: 12.x 

      # Instalar as dependências NPM/Yarn
      - name: Install dependencies
        run: yarn
      
      # Ececutar a build
      - name: Run build
        run: yarn build
      
      # Copiar código para Digital Ocean
      - name: Copy dist to Digital Ocean
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key:  ${{ secrets.SSH_KEY }}
          source: ".,!node_modules"
          target: "~/app/node-deploy"
      
      #Executar "yarn" na Digital Ocean
      - name: Install dependencies on Digital Ocean
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key:  ${{ secrets.SSH_KEY }}
          script: |
            cd ~/app/deploy-solouchuva
            yarn
      
      # Executar as migrations do TypeORM
      - name: Run migrations on Digital Ocean
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key:  ${{ secrets.SSH_KEY }}
          script: |
            cd ~/app/deploy-solouchuva
            ./node_modules/.bin/typeorm migration:run
      
      # Restart no servidor Node.js
      - name: Restart the Node.js server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key:  ${{ secrets.SSH_KEY }}
          script: pm2 restart solouchuva-api
